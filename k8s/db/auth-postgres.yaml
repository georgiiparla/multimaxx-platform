apiVersion: v1
kind: ConfigMap
metadata:
  name: auth-postgres-secret
  labels:
    app: auth-postgres
data:
  POSTGRES_DB: ps_db
  POSTGRES_USER: ps_user
  POSTGRES_PASSWORD: SecurePassword
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: auth-postgres-volume
  labels:
    type: local
    app: auth-postgres
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: /data/postgresql
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: auth-postgres-volume-claim
  labels:
    app: auth-postgres
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-postgres
spec:
  # Reduce replicas from 3 to 1 to prevent multiple simultaneous initdb commands
  replicas: 1
  selector:
    matchLabels:
      app: auth-postgres
  template:
    metadata:
      labels:
        app: auth-postgres
    spec:
      containers:
        - name: postgres
          image: 'postgres:14'
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: auth-postgres-secret
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresdata
      volumes:
        - name: postgresdata
          persistentVolumeClaim:
            claimName: auth-postgres-volume-claim
---
apiVersion: v1
kind: Service
metadata:
  name: auth-postgres
  labels:
    app: auth-postgres
spec:
  type: NodePort
  ports:
    - port: 5432
  selector:
    app: auth-postgres
